// Code generated by opt; DO NOT EDIT.
// github.com/boecklim/opt

package example

import (
	"io"
	"time"
)

type Option func(i *ExampleStruct)

// With firstMember of type string
func WithFirstMember(firstMember string) Option {
	return func(s *ExampleStruct) {
		s.firstMember = firstMember
	}
}

// With SecondMember of type int
func WithSecondMember(SecondMember int) Option {
	return func(s *ExampleStruct) {
		s.SecondMember = SecondMember
	}
}

// With timestamp of type time.Time
func WithTimestamp(timestamp time.Time) Option {
	return func(s *ExampleStruct) {
		s.timestamp = timestamp
	}
}

// With byteReader of type func() io.ByteReader
func WithByteReader(byteReader func() io.ByteReader) Option {
	return func(s *ExampleStruct) {
		s.byteReader = byteReader
	}
}

// With aSlice of type []float64
func WithASlice(aSlice []float64) Option {
	return func(s *ExampleStruct) {
		s.aSlice = aSlice
	}
}

// With aPointer of type *string
func WithAPointer(aPointer *string) Option {
	return func(s *ExampleStruct) {
		s.aPointer = aPointer
	}
}

func New(opts ...Option) *ExampleStruct {
	newInstance := ExampleStruct{}

	for _, opt := range opts {
		opt(&newInstance)
	}

	return &newInstance
}
