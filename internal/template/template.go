package template

import (
	"io"
	"text/template"
)

type Template struct {
	tmpl *template.Template
}

type Data struct {
	PkgName string
}

// New returns a new instance of Template.
func New() (Template, error) {
	tmpl, err := template.New("opt").Parse(optTemplate)
	if err != nil {
		return Template{}, err
	}

	return Template{tmpl: tmpl}, nil
}

var optTemplate = `
// Code generated by opt; DO NOT EDIT.
// github.com/boecklim/opt

package {{.PkgName}}
`

func (t Template) Execute(w io.Writer, data Data) error {
	return t.tmpl.Execute(w, data)
}
